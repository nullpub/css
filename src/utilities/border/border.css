@import '../../variables/colors.css';

@import './border-sizes.css';

@for $size from 0 to 7 {
  .bwt-$(size),
  .bwy-$(size),
  .bwa-$(size) {
    border-top-style: solid;
    border-top-width: var(--border-size-$(size));
  }
  .bwr-$(size),
  .bwx-$(size),
  .bwa-$(size) {
    border-right-style: solid;
    border-right-width: var(--border-size-$(size));
  }
  .bwb-$(size),
  .bwy-$(size),
  .bwa-$(size) {
    border-bottom-style: solid;
    border-bottom-width: var(--border-size-$(size));
  }
  .bwl-$(size),
  .bwx-$(size),
  .bwa-$(size) {
    border-left-style: solid;
    border-left-width: var(--border-size-$(size));
  }
}

/**
 * Border Styles
 */
@each $style in (none, hidden, dotted, dashed, solid, double, groove, ridge, inset, outset) {
  .bs-$(style) {
    border-style: $(style);
  }
}

/**
 * Border Colors
 */
@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  .bc-$(color),
  .ct-$(color) {
    border-color: var(--color-$(color));
  }
}

@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  .bcr-$(color),
  .ctr-$(color) {
    border-color: var(--color-$(color)-contrast);
  }
}

/**
 * Border Colors On Psuedo Classes
 */
@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  @each $psuedo in (hover, active, focus, required, valid, invalid, read-only) {
    .bc-$(color)-$(psuedo):$(psuedo),
    .ct-$(color)-$(psuedo):$(psuedo) {
      border-color: var(--color-$(color));
    }
  }
}

@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  @each $psuedo in (hover, active, focus, required, valid, invalid, read-only) {
    .bcr-$(color)-$(psuedo):$(psuedo),
    .ctr-$(color)-$(psuedo):$(psuedo) {
      border-color: var(--color-$(color)-contrast);
    }
  }
}

/**
 * Border Radius 50% and sized
 */
.bra-c {
  border-radius: var(--border-radius-circle);
}
.brtl-c,
.brt-c,
.brl-c {
  border-top-left-radius: var(--border-radius-circle);
}
.brtr-c,
.brt-c,
.brr-c {
  border-top-right-radius: var(--border-radius-circle);
}
.brbl-c,
.brb-c,
.brl-c {
  border-bottom-left-radius: var(--border-radius-circle);
}
.brbr-c,
.brb-c,
.brr-c {
  border-bottom-right-radius: var(--border-radius-circle);
}

@for $radius from 0 to 3 {
  .bra-$(radius) {
    border-radius: var(--border-radius-$(radius));
  }
  .brtl-$(radius),
  .brt-$(radius),
  .brl-$(radius) {
    border-top-left-radius: var(--border-radius-$(radius));
  }
  .brtr-$(radius),
  .brt-$(radius),
  .brr-$(radius) {
    border-top-right-radius: var(--border-radius-$(radius));
  }
  .brbl-$(radius),
  .brb-$(radius),
  .brl-$(radius) {
    border-bottom-left-radius: var(--border-radius-$(radius));
  }
  .brbr-$(radius),
  .brb-$(radius),
  .brr-$(radius) {
    border-bottom-right-radius: var(--border-radius-$(radius));
  }
}
