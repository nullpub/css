@import '../variables/breakpoints.css';
@import '../variables/colors.css';
@import '../variables/sizes.css';

:root {
  --border-size-base: var(--fill-size);
  --border-size-0: calc(var(--border-size-base) * 0);
  --border-size-1: calc(var(--border-size-base) * 1);
  --border-size-2: calc(var(--border-size-base) * 2);
  --border-size-3: calc(var(--border-size-base) * 4);
  --border-size-4: calc(var(--border-size-base) * 8);
  --border-size-5: calc(var(--border-size-base) * 16);
  --border-size-6: calc(var(--border-size-base) * 32);
  --border-size-7: calc(var(--border-size-base) * 64);
}

:root {
  --border-radius-circle: 50%;
  --border-radius-base: var(--radius-size);
  --border-radius-0: calc(var(--border-radius-base) * 0);
  --border-radius-1: calc(var(--border-radius-base) * 1);
  --border-radius-2: calc(var(--border-radius-base) * 2);
  --border-radius-3: calc(var(--border-radius-base) * 4);
}

@for $size from 0 to 7 {
  .bt-$(size),
  .by-$(size),
  .ba-$(size) {
    border-top-style: solid;
    border-top-width: var(--border-size-$(size));
  }
  .br-$(size),
  .bx-$(size),
  .ba-$(size) {
    border-right-style: solid;
    border-right-width: var(--border-size-$(size));
  }
  .bb-$(size),
  .by-$(size),
  .ba-$(size) {
    border-bottom-style: solid;
    border-bottom-width: var(--border-size-$(size));
  }
  .bl-$(size),
  .bx-$(size),
  .ba-$(size) {
    border-left-style: solid;
    border-left-width: var(--border-size-$(size));
  }
}

@each $break in (sm, md, lg) {
  @each $size in (0, 1, 2, 3, 4, 5, 6, 7) {
    @media (--$(break)) {
      .bt-$(break)-$(size),
      .by-$(break)-$(size),
      .ba-$(break)-$(size) {
        border-top-style: solid;
        border-top-width: var(--border-size-$(size));
      }
      .br-$(break)-$(size),
      .bx-$(break)-$(size),
      .ba-$(break)-$(size) {
        border-right-style: solid;
        border-right-width: var(--border-size-$(size));
      }
      .bb-$(break)-$(size),
      .by-$(break)-$(size),
      .ba-$(break)-$(size) {
        border-bottom-style: solid;
        border-bottom-width: var(--border-size-$(size));
      }
      .bl-$(break)-$(size),
      .bx-$(break)-$(size),
      .ba-$(break)-$(size) {
        border-left-style: solid;
        border-left-width: var(--border-size-$(size));
      }
    }
  }
}

/**
 * Border Styles
 */
@each $style in (none, hidden, dotted, dashed, solid, double, groove, ridge, inset, outset) {
  .bs-$(style) {
    border-style: $(style);
  }
}

/**
 * Border Colors
 */
@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  .bc-$(color),
  .ct-$(color) {
    border-color: var(--color-$(color));
  }
}

@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  .bcr-$(color),
  .ctr-$(color) {
    border-color: var(--color-$(color)-contrast);
  }
}

/**
 * Border Colors On Psuedo Classes
 */
@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  @each $psuedo in (hover, active, focus, required, valid, invalid, read-only) {
    .bc-$(color)-$(psuedo):$(psuedo),
    .ct-$(color)-$(psuedo):$(psuedo) {
      border-color: var(--color-$(color));
    }
  }
}

@each $color in (base, light, dark, link, primary, secondary, accent, info, warning, error) {
  @each $psuedo in (hover, active, focus, required, valid, invalid, read-only) {
    .bcr-$(color)-$(psuedo):$(psuedo),
    .ctr-$(color)-$(psuedo):$(psuedo) {
      border-color: var(--color-$(color)-contrast);
    }
  }
}

/**
 * Border Radius 50% and sized
 */
.bra-c {
  border-radius: var(--border-radius-circle);
}
.brtl-c,
.brt-c,
.brl-c {
  border-top-left-radius: var(--border-radius-circle);
}
.brtr-c,
.brt-c,
.brr-c {
  border-top-right-radius: var(--border-radius-circle);
}
.brbl-c,
.brb-c,
.brl-c {
  border-bottom-left-radius: var(--border-radius-circle);
}
.brbr-c,
.brb-c,
.brr-c {
  border-bottom-right-radius: var(--border-radius-circle);
}

@for $radius from 0 to 3 {
  .bra-$(radius) {
    border-radius: var(--border-radius-$(radius));
  }
  .brtl-$(radius),
  .brt-$(radius),
  .brl-$(radius) {
    border-top-left-radius: var(--border-radius-$(radius));
  }
  .brtr-$(radius),
  .brt-$(radius),
  .brr-$(radius) {
    border-top-right-radius: var(--border-radius-$(radius));
  }
  .brbl-$(radius),
  .brb-$(radius),
  .brl-$(radius) {
    border-bottom-left-radius: var(--border-radius-$(radius));
  }
  .brbr-$(radius),
  .brb-$(radius),
  .brr-$(radius) {
    border-bottom-right-radius: var(--border-radius-$(radius));
  }
}
