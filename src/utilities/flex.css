@import './margin.css'; /* Flex gaps rely on margin sizes */

/**
 * Flex size grow/shrink classes
 */
@for $grow from 0 to 5 {
  @for $shrink from 0 to 5 {
    .fs-$(grow)-$(shrink) {
      flex-grow: $grow;
      flex-shrink: $shrink;
    }
  }
}

@for $grow from 0 to 5 {
  @for $shrink from 0 to 5 {
    @each $break in (sm, md, lg) {
      @media (--$(break)) {
        .fs-$(break)-$(grow)-$(shrink) {
          flex-grow: $grow;
          flex-shrink: $shrink;
        }
      }
    }
  }
}

/**
 * Flex basis classes
 */
.fb-auto {
  flex-basis: auto;
}
.fb-fill {
  flex-basis: fill;
}
.fb-max-content {
  flex-basis: max-content;
}
.fb-min-content {
  flex-basis: min-content;
}
.fb-fit-content {
  flex-basis: fit-content;
}
.fb-content {
  flex-basis: content;
}
.fb-inherit {
  flex-basis: inherit;
}
.fb-initial {
  flex-basis: initial;
}
.fb-unset {
  flex-basis: unset;
}

/**
 * Flex direction classes
 */
@each $direction in (row, column) {
  .fd-$(direction) {
    display: flex;
    flex-direction: $direction;
  }
  .fd-$(direction)-reverse {
    display: flex;
    flex-direction: $(direction)-reverse;
  }
}

@each $direction in (row, column) {
  @each $break in (sm, md, lg) {
    @media (--$(break)) {
      .fd-$(break)-$(direction) {
        display: flex;
        flex-direction: $direction;
      }
      .fd-$(break)-$(direction)-reverse {
        display: flex;
        flex-direction: $(direction)-reverse;
      }
    }
  }
}

/**
 * Flex direction gaps
 */
@for $size from 0 to 7 {
  .fd-row.fg-$(size) > *:not(:last-child) {
    margin-right: var(--margin-size-$(size));
  }
  .fd-column.fg-$(size) > *:not(:last-child) {
    margin-bottom: var(--margin-size-$(size));
  }
  .fd-row-reverse.fg-$(size) > *:not(:last-child) {
    margin-left: var(--margin-size-$(size));
  }
  .fd-column-reverse.fg-$(size) > *:not(:last-child) {
    margin-top: var(--margin-size-$(size));
  }
}

@each $break in (sm, md, lg) {
  @for $size from 0 to 7 {
    @media (--$(break)) {
      .fd-$(break)-row.fg-$(size) > *:not(:last-child) {
        margin: 0;
        margin-right: var(--margin-size-$(size));
      }
      .fd-$(break)-column.fg-$(size) > *:not(:last-child) {
        margin: 0;
        margin-bottom: var(--margin-size-$(size));
      }
      .fd-$(break)-row-reverse.fg-$(size) > *:not(:last-child) {
        margin: 0;
        margin-left: var(--margin-size-$(size));
      }
      .fd-$(break)-column-reverse.fg-$(size) > *:not(:last-child) {
        margin: 0;
        margin-top: var(--margin-size-$(size));
      }
    }
  }
}
